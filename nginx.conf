# Nginx configuration for STASIS frontend with SSL support

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;

# Upstream backend server
upstream backend {
    server 68.183.237.216:8080;
}

# HTTP server - serve content directly for now
server {
    listen 80;
    server_name stasis-edu.tech www.stasis-edu.tech localhost;
    
    # Root directory for React app
    root /usr/share/nginx/html;
    index index.html;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # API proxy to backend
    location /api/ {
        # Rate limiting for API endpoints
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Special rate limiting for login endpoints
    location /api/auth/login {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Credentials "true" always;
    }
    
    # Static assets with long cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # React Router - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# # HTTPS server
# server {
#     listen 443 ssl http2;
#     server_name stasis-edu.tech www.stasis-edu.tech;
    
#     # SSL Configuration
#     ssl_certificate /etc/letsencrypt/live/stasis-edu.tech/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/stasis-edu.tech/privkey.pem;
    
#     # SSL Security Settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
    
#     # Security Headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options DENY always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
#     # Gzip compression
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types
#         text/plain
#         text/css
#         text/xml
#         text/javascript
#         application/json
#         application/javascript
#         application/xml+rss
#         application/atom+xml
#         image/svg+xml;
    
#     # Root directory for React app
#     root /usr/share/nginx/html;
#     index index.html;
    
#     # API proxy to backend
#     location /api/ {
#         # Rate limiting for API endpoints
#         limit_req zone=api burst=20 nodelay;
        
#         proxy_pass http://backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
        
#         # CORS headers for API
#         add_header Access-Control-Allow-Origin "https://stasis-edu.tech" always;
#         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
#         add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
#         add_header Access-Control-Allow-Credentials "true" always;
        
#         # Handle preflight requests
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Origin "https://stasis-edu.tech";
#             add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
#             add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
#             add_header Access-Control-Allow-Credentials "true";
#             add_header Content-Length 0;
#             add_header Content-Type text/plain;
#             return 204;
#         }
        
#         # Timeout settings
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
    
#     # Special rate limiting for login endpoints
#     location /api/auth/login {
#         limit_req zone=login burst=5 nodelay;
        
#         proxy_pass http://backend;
#         proxy_http_version 1.1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # CORS headers
#         add_header Access-Control-Allow-Origin "https://stasis-edu.tech" always;
#         add_header Access-Control-Allow-Credentials "true" always;
#     }
    
#     # Static assets with long cache
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         try_files $uri =404;
#     }
    
#     # React Router - serve index.html for all routes
#     location / {
#         try_files $uri $uri/ /index.html;
        
#         # Cache control for HTML files
#         add_header Cache-Control "no-cache, no-store, must-revalidate";
#         add_header Pragma "no-cache";
#         add_header Expires "0";
#     }
    
#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
    
#     # Deny access to sensitive files
#     location ~ /\. {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
    
#     location ~ ~$ {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
